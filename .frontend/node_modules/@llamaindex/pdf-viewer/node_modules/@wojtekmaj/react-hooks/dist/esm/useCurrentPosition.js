import { useEffect, useState } from 'react';
var isBrowser = typeof document !== 'undefined';
/**
 * Returns current position from Geolocation API.
 *
 * @param {PositionOptions} [options] Options to pass to Geolocation.getCurrentPosition
 *   and Geolocation.watchPosition.
 *   See https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions. WARNING! If you define
 *   the function in component body, make sure to memoize it.
 * @returns {GeolocationCoordinates} Object with latitude and longitude
 */
export default function useCurrentPosition(options) {
    var _a = useState(null), position = _a[0], setPosition = _a[1];
    useEffect(function () {
        if (!isBrowser || !('geolocation' in navigator)) {
            return undefined;
        }
        var onPositionReceive = function (result) {
            setPosition(result.coords);
        };
        navigator.geolocation.getCurrentPosition(onPositionReceive, undefined, options);
        var watch = navigator.geolocation.watchPosition(onPositionReceive, undefined, options);
        return function () {
            navigator.geolocation.clearWatch(watch);
        };
    }, [options]);
    return position;
}
