"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = require("react");
var isBrowser = typeof document !== 'undefined';
/**
 * Returns permission state given permission name.
 *
 * @param {PermissionDescriptor} options Options
 * @param {PermissionDescriptor.name} options.name Permission name
 * @returns {string | null} Permission state ("granted", "denied", "prompt")
 */
function usePermissionState(_a) {
    var name = _a.name;
    var _b = (0, react_1.useState)(function () {
        var areNavigatorPermissionsSupported = isBrowser && 'permissions' in navigator;
        if (!areNavigatorPermissionsSupported) {
            return null;
        }
        if (name === 'notifications') {
            var potentialState = Notification.permission;
            return potentialState === 'default' ? 'prompt' : potentialState;
        }
        return null;
    }), state = _b[0], setState = _b[1];
    (0, react_1.useEffect)(function () {
        var areNavigatorPermissionsSupported = isBrowser && 'permissions' in navigator;
        if (!areNavigatorPermissionsSupported) {
            return;
        }
        var permissionStatus;
        function onPermissionStatusChange() {
            setState(permissionStatus.state);
        }
        navigator.permissions.query({ name: name }).then(function (result) {
            permissionStatus = result;
            setState(permissionStatus.state);
            permissionStatus.addEventListener('change', onPermissionStatusChange);
        });
        return function () {
            if (permissionStatus) {
                permissionStatus.removeEventListener('change', onPermissionStatusChange);
            }
        };
    }, [name]);
    return state;
}
exports.default = usePermissionState;
