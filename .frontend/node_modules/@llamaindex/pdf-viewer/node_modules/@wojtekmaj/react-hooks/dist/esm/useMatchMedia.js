import { useCallback, useEffect, useMemo, useState } from 'react';
var isBrowser = typeof document !== 'undefined';
/**
 * Returns a flag which determines if the document matches the given media query string.
 *
 * @param {string} query Media query string
 * @returns {boolean | null} Whether the document matches the given media query string
 */
export default function useMatchMedia(query) {
    var mql = useMemo(function () { return (isBrowser ? window.matchMedia(query) : null); }, [query]);
    var _a = useState(mql ? mql.matches : null), matches = _a[0], setMatches = _a[1];
    var handleMql = useCallback(function (event) {
        setMatches(event.matches);
    }, []);
    useEffect(function () {
        if (!mql) {
            return undefined;
        }
        mql.addEventListener('change', handleMql);
        return function () {
            mql.removeEventListener('change', handleMql);
        };
    }, [mql, handleMql]);
    return matches;
}
