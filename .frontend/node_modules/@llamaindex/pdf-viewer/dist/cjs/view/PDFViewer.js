"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const usePdfViewer_js_1 = __importDefault(require("../hooks/usePdfViewer.js"));
const VirtualizedPdf_js_1 = __importDefault(require("./VirtualizedPdf.js"));
const PdfOptionsBar_js_1 = __importDefault(require("./PdfOptionsBar.js"));
const clsx_1 = require("clsx");
const PDFViewer = ({ file, hideOptionBar, containerClassName }) => {
    const { scrolledIndex, setCurrentPageNumber, scale, setScaleFit, numPages, setNumPages, handleZoomIn, handleZoomOut, nextPage, prevPage, scaleText, pdfFocusRef, goToPage, setZoomLevel, zoomInEnabled, zoomOutEnabled, } = (0, usePdfViewer_js_1.default)(file);
    return ((0, jsx_runtime_1.jsxs)("div", { className: (0, clsx_1.clsx)('pdf-viewer-container', containerClassName), children: [!hideOptionBar && ((0, jsx_runtime_1.jsx)(PdfOptionsBar_js_1.default, { file: file, scrolledIndex: scrolledIndex, numPages: numPages, scaleText: scaleText, nextPage: nextPage, prevPage: prevPage, handleZoomIn: handleZoomIn, handleZoomOut: handleZoomOut, goToPage: goToPage, setZoomLevel: setZoomLevel, zoomInEnabled: zoomInEnabled, zoomOutEnabled: zoomOutEnabled })), (0, jsx_runtime_1.jsx)(VirtualizedPdf_js_1.default, { ref: pdfFocusRef, file: file, setIndex: setCurrentPageNumber, scale: scale, setScaleFit: setScaleFit, setNumPages: setNumPages }, `${file.id}`)] }));
};
exports.default = PDFViewer;
