import { jsxs as _jsxs, jsx as _jsx } from "react/jsx-runtime";
import { useEffect, useState } from 'react';
import { CaretDownIcon, CaretUpIcon, ZoomOutIcon, ZoomInIcon } from './icon.js';
import { zoomLevels } from '../hooks/usePdfViewer.js';
const PDFOptionsBar = ({ file, scrolledIndex, numPages, scaleText, nextPage, prevPage, handleZoomIn, handleZoomOut, goToPage, setZoomLevel, zoomInEnabled, zoomOutEnabled, }) => {
    const [inputValue, setInputValue] = useState(`${scrolledIndex + 1}`);
    useEffect(() => {
        setInputValue(`${scrolledIndex + 1}`);
    }, [scrolledIndex]);
    const handleZoomSelection = (zoom) => {
        setZoomLevel(zoom);
    };
    const handleChange = (e) => {
        setInputValue(e.target.value);
    };
    const handleKeyDown = (e) => {
        if (e.key === 'Enter') {
            const value = parseInt(inputValue, 10);
            if (!isNaN(value) && value > 0) {
                scrollToPage(value - 1);
            }
        }
    };
    const scrollToPage = (page) => {
        goToPage(page);
    };
    return (_jsxs("div", { className: "optionBar", children: [_jsxs("div", { className: "title truncate", children: ["File ID: ", file.id] }), _jsxs("div", { className: "control", children: [_jsxs("div", { className: "pageControl", children: [_jsx("button", { className: "pageUp", onClick: prevPage, disabled: scrolledIndex === 0, children: _jsx(CaretUpIcon, {}) }), _jsx("input", { className: "pageInput", value: inputValue, onChange: handleChange, onKeyDown: handleKeyDown }), _jsx("button", { className: "pageDown", onClick: nextPage, disabled: scrolledIndex === numPages - 1, children: _jsx(CaretDownIcon, {}) })] }), _jsxs("div", { className: "zoomControl", children: [_jsx("button", { className: "zoomOut", onClick: handleZoomOut, disabled: !zoomOutEnabled, children: _jsx(ZoomOutIcon, {}) }), _jsx("select", { className: "zoomSelect", value: scaleText, onChange: (e) => handleZoomSelection(e.target.value), children: zoomLevels.map((zoom, index) => (_jsx("option", { value: zoom, children: zoom }, index))) }), _jsx("button", { className: "zoomIn", onClick: handleZoomIn, disabled: !zoomInEnabled, children: _jsx(ZoomInIcon, {}) })] })] })] }));
};
PDFOptionsBar.displayName = 'PDFOptionsBar';
export default PDFOptionsBar;
