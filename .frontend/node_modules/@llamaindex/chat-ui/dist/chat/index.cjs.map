{"version":3,"sources":["../../src/index.tsx","../../src/chat/annotation.ts","../../src/chat/chat-section.tsx","../../src/lib/utils.ts","../../src/chat/chat-input.tsx","../../src/ui/button.tsx","../../src/ui/input.tsx","../../src/ui/textarea.tsx","../../src/chat/chat.context.ts","../../src/chat/chat-messages.tsx","../../src/chat/chat-message.tsx","../../src/hook/use-copy-to-clipboard.tsx","../../src/chat/chat-annotations.tsx","../../src/hook/use-file.tsx"],"sourcesContent":["// Chat components\nexport * from './chat/chat.interface'\nexport * from './chat/annotation'\nexport { default as ChatSection } from './chat/chat-section'\nexport { default as ChatInput } from './chat/chat-input'\nexport { default as ChatMessages } from './chat/chat-messages'\nexport { default as ChatMessage, ContentPosition } from './chat/chat-message'\n\n// Context Provider Hooks\nexport { useChatUI } from './chat/chat.context'\nexport { useChatInput } from './chat/chat-input'\nexport { useChatMessages } from './chat/chat-messages'\nexport { useChatMessage } from './chat/chat-message'\n\n// Custom Hooks\nexport { useFile } from './hook/use-file'\n","export enum MessageAnnotationType {\n  IMAGE = 'image',\n  DOCUMENT_FILE = 'document_file',\n  SOURCES = 'sources',\n  EVENTS = 'events',\n  SUGGESTED_QUESTIONS = 'suggested_questions',\n  AGENT_EVENTS = 'agent',\n}\n\nexport type ImageData = {\n  url: string\n}\n\nexport type DocumentFileType = 'csv' | 'pdf' | 'txt' | 'docx'\nexport const DOCUMENT_FILE_TYPES: DocumentFileType[] = [\n  'csv',\n  'pdf',\n  'txt',\n  'docx',\n]\n\nexport type DocumentFile = {\n  id: string\n  name: string // The uploaded file name in the backend\n  size: number // The file size in bytes\n  type: DocumentFileType\n  url: string // The URL of the uploaded file in the backend\n  refs?: string[] // DocumentIDs of the uploaded file in the vector index\n}\n\nexport type DocumentFileData = {\n  files: DocumentFile[]\n}\n\nexport type SourceNode = {\n  id: string\n  metadata: Record<string, unknown>\n  score?: number\n  text: string\n  url: string\n}\n\nexport type SourceData = {\n  nodes: SourceNode[]\n}\n\nexport type EventData = {\n  title: string\n}\n\nexport type ProgressData = {\n  id: string\n  total: number\n  current: number\n}\n\nexport type AgentEventData = {\n  agent: string\n  text: string\n  type: 'text' | 'progress'\n  data?: ProgressData\n}\n\nexport type SuggestedQuestionsData = string[]\n\nexport type AnnotationData =\n  | ImageData\n  | DocumentFileData\n  | SourceData\n  | EventData\n  | AgentEventData\n  | SuggestedQuestionsData\n\nexport type MessageAnnotation = {\n  type: MessageAnnotationType\n  data: AnnotationData\n}\n\nconst NODE_SCORE_THRESHOLD = 0.25\n\nexport function getAnnotationData<T extends AnnotationData>(\n  annotations: MessageAnnotation[],\n  type: string\n): T[] {\n  if (!annotations?.length) return []\n  return annotations\n    .filter(a => a.type.toString() === type)\n    .map(a => a.data as T)\n}\n\nexport function getSourceAnnotationData(\n  annotations: MessageAnnotation[]\n): SourceData[] {\n  const data = getAnnotationData<SourceData>(\n    annotations,\n    MessageAnnotationType.SOURCES\n  )\n  if (data.length > 0) {\n    return [\n      {\n        ...data[0],\n        nodes: data[0].nodes ? preprocessSourceNodes(data[0].nodes) : [],\n      },\n    ]\n  }\n  return data\n}\n\nfunction preprocessSourceNodes(nodes: SourceNode[]): SourceNode[] {\n  // Filter source nodes has lower score\n  const processedNodes = nodes\n    .filter(node => (node.score ?? 1) > NODE_SCORE_THRESHOLD)\n    .filter(node => node.url && node.url.trim() !== '')\n    .sort((a, b) => (b.score ?? 1) - (a.score ?? 1))\n    .map(node => {\n      // remove trailing slash for node url if exists\n      node.url = node.url.replace(/\\/$/, '')\n      return node\n    })\n  return processedNodes\n}\n","import { useState } from 'react'\nimport { cn } from '../lib/utils'\nimport ChatInput from './chat-input'\nimport ChatMessages from './chat-messages'\nimport { ChatProvider } from './chat.context'\nimport { type ChatHandler } from './chat.interface'\n\nexport interface ChatSectionProps extends React.PropsWithChildren {\n  handler: ChatHandler\n  className?: string\n}\n\nexport default function ChatSection(props: ChatSectionProps) {\n  const { handler, className } = props\n  const [requestData, setRequestData] = useState<any>()\n\n  const children = props.children ?? (\n    <>\n      <ChatMessages />\n      <ChatInput />\n    </>\n  )\n\n  return (\n    <ChatProvider value={{ ...handler, requestData, setRequestData }}>\n      <div className={cn('flex flex-col gap-4', className)}>{children}</div>\n    </ChatProvider>\n  )\n}\n","import { clsx, type ClassValue } from 'clsx'\nimport { twMerge } from 'tailwind-merge'\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","import { createContext, useContext } from 'react'\nimport { cn } from '../lib/utils'\nimport { Button } from '../ui/button'\nimport { Input } from '../ui/input'\nimport { Textarea } from '../ui/textarea'\nimport { FileUploader } from '../widgets/index.js' // this import needs the file extension as it's importing the widget bundle\nimport { useChatUI } from './chat.context'\nimport { Message } from './chat.interface'\n\nconst ALLOWED_EXTENSIONS = ['png', 'jpg', 'jpeg', 'csv', 'pdf', 'txt', 'docx']\n\ninterface ChatInputProps extends React.PropsWithChildren {\n  className?: string\n  resetUploadedFiles?: () => void\n  annotations?: any\n}\n\ninterface ChatInputFormProps extends React.PropsWithChildren {\n  className?: string\n}\n\ninterface ChatInputFieldProps {\n  className?: string\n  type?: 'input' | 'textarea'\n  placeholder?: string\n}\n\ninterface ChatInputUploadProps {\n  className?: string\n  onUpload?: (file: File) => Promise<void> | undefined\n  allowedExtensions?: string[]\n  multiple?: boolean\n}\n\ninterface ChatInputSubmitProps extends React.PropsWithChildren {\n  className?: string\n  disabled?: boolean\n}\n\ninterface ChatInputContext {\n  isDisabled: boolean\n  handleKeyDown: (e: React.KeyboardEvent<HTMLTextAreaElement>) => void\n  handleSubmit: (e: React.FormEvent<HTMLFormElement>) => void\n}\n\nconst chatInputContext = createContext<ChatInputContext | null>(null)\n\nconst ChatInputProvider = chatInputContext.Provider\n\nexport const useChatInput = () => {\n  const context = useContext(chatInputContext)\n  if (!context) {\n    throw new Error('useChatInput must be used within a ChatInputProvider')\n  }\n  return context\n}\n\nfunction ChatInput(props: ChatInputProps) {\n  const { input, setInput, append, isLoading, requestData } = useChatUI()\n  const isDisabled = isLoading || !input.trim()\n\n  const submit = async () => {\n    const newMessage: Omit<Message, 'id'> = {\n      role: 'user',\n      content: input,\n      annotations: props.annotations,\n    }\n\n    setInput('') // Clear the input\n    props.resetUploadedFiles?.() // Reset the uploaded files\n\n    await append(newMessage, { data: requestData })\n  }\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n    await submit()\n  }\n\n  const handleKeyDown = async (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    if (isDisabled) return\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault()\n      await submit()\n    }\n  }\n\n  const children = props.children ?? <ChatInputForm />\n\n  return (\n    <ChatInputProvider value={{ isDisabled, handleKeyDown, handleSubmit }}>\n      <div\n        className={cn(\n          'bg-background flex shrink-0 flex-col gap-4 p-4',\n          props.className\n        )}\n      >\n        {children}\n      </div>\n    </ChatInputProvider>\n  )\n}\n\nfunction ChatInputForm(props: ChatInputFormProps) {\n  const { handleSubmit } = useChatInput()\n  const children = props.children ?? (\n    <>\n      <ChatInputField />\n      <ChatInputSubmit />\n    </>\n  )\n\n  return (\n    <form onSubmit={handleSubmit} className={cn(props.className, 'flex gap-2')}>\n      {children}\n    </form>\n  )\n}\n\nfunction ChatInputField(props: ChatInputFieldProps) {\n  const { input, setInput } = useChatUI()\n  const { handleKeyDown } = useChatInput()\n  const type = props.type ?? 'textarea'\n\n  if (type === 'input') {\n    return (\n      <Input\n        name=\"input\"\n        placeholder={props.placeholder ?? 'Type a message'}\n        className={cn(props.className, 'min-h-0')}\n        value={input}\n        onChange={e => setInput(e.target.value)}\n      />\n    )\n  }\n\n  return (\n    <Textarea\n      name=\"input\"\n      placeholder={props.placeholder ?? 'Type a message'}\n      className={cn(props.className, 'h-[40px] min-h-0 flex-1')}\n      value={input}\n      onChange={e => setInput(e.target.value)}\n      onKeyDown={handleKeyDown}\n    />\n  )\n}\n\nfunction ChatInputUpload(props: ChatInputUploadProps) {\n  const { requestData, setRequestData, isLoading } = useChatUI()\n\n  const onFileUpload = async (file: File) => {\n    if (props.onUpload) {\n      await props.onUpload(file)\n    } else {\n      setRequestData({ ...(requestData || {}), file })\n    }\n  }\n\n  return (\n    <FileUploader\n      onFileUpload={onFileUpload}\n      config={{\n        disabled: isLoading,\n        allowedExtensions: props.allowedExtensions ?? ALLOWED_EXTENSIONS,\n        multiple: props.multiple ?? true,\n      }}\n    />\n  )\n}\n\nfunction ChatInputSubmit(props: ChatInputSubmitProps) {\n  const { isDisabled } = useChatInput()\n  return (\n    <Button\n      type=\"submit\"\n      disabled={props.disabled ?? isDisabled}\n      className={cn(props.className)}\n    >\n      {props.children ?? 'Send message'}\n    </Button>\n  )\n}\n\nChatInput.Form = ChatInputForm\nChatInput.Field = ChatInputField\nChatInput.Upload = ChatInputUpload\nChatInput.Submit = ChatInputSubmit\n\nexport default ChatInput\n","import { Slot } from '@radix-ui/react-slot'\nimport { cva, type VariantProps } from 'class-variance-authority'\nimport * as React from 'react'\nimport { cn } from '../lib/utils'\n\nconst buttonVariants = cva(\n  'inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50',\n  {\n    variants: {\n      variant: {\n        default: 'bg-primary text-primary-foreground hover:bg-primary/90',\n        destructive:\n          'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n        outline:\n          'border border-input bg-background hover:bg-accent hover:text-accent-foreground',\n        secondary:\n          'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n        ghost: 'hover:bg-accent hover:text-accent-foreground',\n        link: 'text-primary underline-offset-4 hover:underline',\n      },\n      size: {\n        default: 'h-10 px-4 py-2',\n        sm: 'h-9 rounded-md px-3',\n        lg: 'h-11 rounded-md px-8',\n        icon: 'h-10 w-10',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : 'button'\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = 'Button'\n\nexport { Button, buttonVariants }\n","import * as React from 'react'\n\nimport { cn } from '../lib/utils'\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          'border-input bg-background ring-offset-background placeholder:text-muted-foreground focus-visible:ring-ring flex h-10 w-full rounded-md border px-3 py-2 text-sm file:border-0 file:bg-transparent file:text-sm file:font-medium focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = 'Input'\n\nexport { Input }\n","import * as React from 'react'\nimport { cn } from '../lib/utils'\n\nexport interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'border-input bg-background ring-offset-background placeholder:text-muted-foreground focus-visible:ring-ring flex min-h-[80px] w-full rounded-md border px-3 py-2 text-sm focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nTextarea.displayName = 'Textarea'\n\nexport { Textarea }\n","import { createContext, useContext } from 'react'\nimport { type ChatContext } from './chat.interface'\n\nexport const chatContext = createContext<ChatContext | null>(null)\n\nexport const ChatProvider = chatContext.Provider\n\nexport const useChatUI = () => {\n  const context = useContext(chatContext)\n  if (!context) {\n    throw new Error('useChatUI must be used within a ChatProvider')\n  }\n  return context\n}\n","import { Loader2, PauseCircle, RefreshCw } from 'lucide-react'\nimport { createContext, useContext, useEffect, useRef } from 'react'\nimport { cn } from '../lib/utils'\nimport { Button } from '../ui/button'\nimport ChatMessage from './chat-message'\nimport { useChatUI } from './chat.context'\nimport type { Message } from './chat.interface'\n\ninterface ChatMessagesProps extends React.PropsWithChildren {\n  className?: string\n}\n\ninterface ChatMessagesListProps extends React.PropsWithChildren {\n  className?: string\n}\n\ninterface ChatMessagesLoadingProps extends React.PropsWithChildren {\n  className?: string\n}\n\ninterface ChatActionsProps extends React.PropsWithChildren {\n  className?: string\n}\n\ninterface ChatMessagesContext {\n  isPending: boolean\n  showReload?: boolean\n  showStop?: boolean\n  messageLength: number\n  lastMessage: Message\n}\n\nconst chatMessagesContext = createContext<ChatMessagesContext | null>(null)\n\nconst ChatMessagesProvider = chatMessagesContext.Provider\n\nexport const useChatMessages = () => {\n  const context = useContext(chatMessagesContext)\n  if (!context) {\n    throw new Error(\n      'useChatMessages must be used within a ChatMessagesProvider'\n    )\n  }\n  return context\n}\n\nfunction ChatMessages(props: ChatMessagesProps) {\n  const { messages, reload, stop, isLoading } = useChatUI()\n\n  const messageLength = messages.length\n  const lastMessage = messages[messageLength - 1]\n  const isLastMessageFromAssistant =\n    messageLength > 0 && lastMessage?.role !== 'user'\n  const showReload = reload && !isLoading && isLastMessageFromAssistant\n  const showStop = stop && isLoading\n\n  // `isPending` indicate\n  // that stream response is not yet received from the server,\n  // so we show a loading indicator to give a better UX.\n  const isPending = isLoading && !isLastMessageFromAssistant\n\n  const children = props.children ?? (\n    <>\n      <ChatMessagesList />\n      <ChatActions />\n    </>\n  )\n\n  return (\n    <ChatMessagesProvider\n      value={{ isPending, showReload, showStop, lastMessage, messageLength }}\n    >\n      <div\n        className={cn(\n          'bg-background relative flex min-h-0 flex-1 flex-col space-y-6 p-4',\n          props.className\n        )}\n      >\n        {children}\n      </div>\n    </ChatMessagesProvider>\n  )\n}\n\nfunction ChatMessagesList(props: ChatMessagesListProps) {\n  const scrollableChatContainerRef = useRef<HTMLDivElement>(null)\n  const { messages, isLoading, append } = useChatUI()\n  const { lastMessage, messageLength } = useChatMessages()\n\n  const scrollToBottom = () => {\n    if (scrollableChatContainerRef.current) {\n      scrollableChatContainerRef.current.scrollTop =\n        scrollableChatContainerRef.current.scrollHeight\n    }\n  }\n\n  useEffect(() => {\n    scrollToBottom()\n  }, [messageLength, lastMessage])\n\n  const children = props.children ?? (\n    <>\n      {messages.map((message, index) => {\n        return (\n          <ChatMessage\n            key={index}\n            message={message}\n            isLast={index === messageLength - 1}\n            isLoading={isLoading}\n            append={append}\n          />\n        )\n      })}\n      <ChatMessagesLoading />\n    </>\n  )\n\n  return (\n    <div\n      className={cn(\n        'flex min-h-0 flex-1 flex-col gap-5 overflow-auto',\n        props.className\n      )}\n      ref={scrollableChatContainerRef}\n    >\n      {children}\n    </div>\n  )\n}\n\nfunction ChatMessagesLoading(props: ChatMessagesLoadingProps) {\n  const { isPending } = useChatMessages()\n  if (!isPending) return null\n\n  const children = props.children ?? (\n    <Loader2 className=\"h-4 w-4 animate-spin\" />\n  )\n\n  return (\n    <div\n      className={cn('flex items-center justify-center pt-4', props.className)}\n    >\n      {children}\n    </div>\n  )\n}\n\nfunction ChatActions(props: ChatActionsProps) {\n  const { reload, stop, requestData } = useChatUI()\n  const { showReload, showStop } = useChatMessages()\n  if (!showStop && !showReload) return null\n\n  const children = props.children ?? (\n    <>\n      {showStop && (\n        <Button variant=\"outline\" size=\"sm\" onClick={stop}>\n          <PauseCircle className=\"mr-2 h-4 w-4\" />\n          Stop generating\n        </Button>\n      )}\n      {showReload && (\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={() => reload?.({ data: requestData })}\n        >\n          <RefreshCw className=\"mr-2 h-4 w-4\" />\n          Regenerate\n        </Button>\n      )}\n    </>\n  )\n\n  return (\n    <div className={cn('flex justify-end gap-4', props.className)}>\n      {children}\n    </div>\n  )\n}\n\nChatMessages.List = ChatMessagesList\nChatMessages.Loading = ChatMessagesLoading\nChatMessages.Actions = ChatActions\n\nexport default ChatMessages\n","import { Bot, Check, Copy, MessageCircle, User2 } from 'lucide-react'\nimport { createContext, Fragment, memo, useContext, useMemo } from 'react'\nimport { useCopyToClipboard } from '../hook/use-copy-to-clipboard'\nimport { cn } from '../lib/utils'\nimport { Button } from '../ui/button'\nimport { Markdown } from '../widgets/index.js' // this import needs the file extension as it's importing the widget bundle\nimport { getSourceAnnotationData, MessageAnnotation } from './annotation'\nimport {\n  AgentEventAnnotations,\n  DocumentFileAnnotations,\n  EventAnnotations,\n  ImageAnnotations,\n  SourceAnnotations,\n  SuggestedQuestionsAnnotations,\n} from './chat-annotations'\nimport { ChatHandler, Message } from './chat.interface'\n\ninterface ChatMessageProps extends React.PropsWithChildren {\n  message: Message\n  isLast: boolean\n  className?: string\n  isLoading?: boolean\n  append?: ChatHandler['append']\n}\n\ninterface ChatMessageAvatarProps extends React.PropsWithChildren {\n  className?: string\n}\n\nexport enum ContentPosition {\n  TOP = -9999,\n  CHAT_EVENTS = 0,\n  AFTER_EVENTS = 1,\n  CHAT_AGENT_EVENTS = 2,\n  AFTER_AGENT_EVENTS = 3,\n  CHAT_IMAGE = 4,\n  AFTER_IMAGE = 5,\n  BEFORE_MARKDOWN = 6,\n  MARKDOWN = 7,\n  AFTER_MARKDOWN = 8,\n  CHAT_DOCUMENT_FILES = 9,\n  AFTER_DOCUMENT_FILES = 10,\n  CHAT_SOURCES = 11,\n  AFTER_SOURCES = 12,\n  SUGGESTED_QUESTIONS = 13,\n  AFTER_SUGGESTED_QUESTIONS = 14,\n  BOTTOM = 9999,\n}\n\ntype ContentDisplayConfig = {\n  position: ContentPosition\n  component: React.ReactNode | null\n}\n\ninterface ChatMessageContentProps extends React.PropsWithChildren {\n  className?: string\n  content?: ContentDisplayConfig[]\n  isLoading?: boolean\n  append?: ChatHandler['append']\n  message?: Message // in case you want to customize the message\n}\n\ninterface ChatMessageActionsProps extends React.PropsWithChildren {\n  className?: string\n}\n\ninterface ChatMessageContext {\n  message: Message\n  isLast: boolean\n}\n\nconst chatMessageContext = createContext<ChatMessageContext | null>(null)\n\nconst ChatMessageProvider = chatMessageContext.Provider\n\nexport const useChatMessage = () => {\n  const context = useContext(chatMessageContext)\n  if (!context)\n    throw new Error('useChatMessage must be used within a ChatMessageProvider')\n  return context\n}\n\nfunction ChatMessage(props: ChatMessageProps) {\n  const children = props.children ?? (\n    <>\n      <ChatMessageAvatar />\n      <ChatMessageContent isLoading={props.isLoading} append={props.append} />\n      <ChatMessageActions />\n    </>\n  )\n\n  return (\n    <ChatMessageProvider\n      value={{ message: props.message, isLast: props.isLast }}\n    >\n      <div className={cn('group flex gap-4 p-3', props.className)}>\n        {children}\n      </div>\n    </ChatMessageProvider>\n  )\n}\n\nfunction ChatMessageAvatar(props: ChatMessageAvatarProps) {\n  const { message } = useChatMessage()\n\n  const roleIconMap: Record<string, React.ReactNode> = {\n    user: <User2 className=\"h-4 w-4\" />,\n    assistant: <Bot className=\"h-4 w-4\" />,\n  }\n\n  const children = props.children ?? roleIconMap[message.role] ?? (\n    <MessageCircle className=\"h-4 w-4\" />\n  )\n\n  return (\n    <div className=\"bg-background flex h-8 w-8 shrink-0 select-none items-center justify-center border\">\n      {children}\n    </div>\n  )\n}\n\nfunction ChatMessageContent(props: ChatMessageContentProps) {\n  const { message: defaultMessage, isLast } = useChatMessage()\n  const message = props.message ?? defaultMessage\n  const annotations = message.annotations as MessageAnnotation[] | undefined\n\n  const contents = useMemo<ContentDisplayConfig[]>(() => {\n    const displayMap: {\n      [key in ContentPosition]?: React.ReactNode | null\n    } = {\n      [ContentPosition.CHAT_EVENTS]: (\n        <EventAnnotations\n          message={message}\n          showLoading={(isLast && props.isLoading) ?? false}\n        />\n      ),\n      [ContentPosition.CHAT_AGENT_EVENTS]: (\n        <AgentEventAnnotations message={message} />\n      ),\n      [ContentPosition.CHAT_IMAGE]: <ImageAnnotations message={message} />,\n      [ContentPosition.MARKDOWN]: (\n        <Markdown\n          content={message.content}\n          sources={\n            annotations ? getSourceAnnotationData(annotations)[0] : undefined\n          }\n        />\n      ),\n      [ContentPosition.CHAT_DOCUMENT_FILES]: (\n        <DocumentFileAnnotations message={message} />\n      ),\n      [ContentPosition.CHAT_SOURCES]: <SourceAnnotations message={message} />,\n      ...(isLast &&\n        props.append && {\n          // show suggested questions only on the last message\n          [ContentPosition.SUGGESTED_QUESTIONS]: (\n            <SuggestedQuestionsAnnotations\n              message={message}\n              append={props.append}\n            />\n          ),\n        }),\n    }\n\n    // Override the default display map with the custom content\n    props.content?.forEach(content => {\n      displayMap[content.position] = content.component\n    })\n\n    return Object.entries(displayMap).map(([position, component]) => ({\n      position: parseInt(position),\n      component,\n    }))\n  }, [\n    annotations,\n    isLast,\n    message,\n    props.append,\n    props.content,\n    props.isLoading,\n  ])\n\n  const children = props.children ?? (\n    <>\n      {contents\n        .sort((a, b) => a.position - b.position)\n        .map((content, index) => (\n          <Fragment key={index}>{content.component}</Fragment>\n        ))}\n    </>\n  )\n\n  return (\n    <div className={cn('flex min-w-0 flex-1 flex-col gap-4', props.className)}>\n      {children}\n    </div>\n  )\n}\n\nfunction ChatMessageActions(props: ChatMessageActionsProps) {\n  const { isCopied, copyToClipboard } = useCopyToClipboard({ timeout: 2000 })\n  const { message } = useChatMessage()\n\n  const children = props.children ?? (\n    <Button\n      onClick={() => copyToClipboard(message.content)}\n      size=\"icon\"\n      variant=\"ghost\"\n      className=\"h-8 w-8\"\n    >\n      {isCopied ? <Check className=\"h-4 w-4\" /> : <Copy className=\"h-4 w-4\" />}\n    </Button>\n  )\n  return (\n    <div\n      className={cn(\n        'flex shrink-0 flex-col gap-2 opacity-0 group-hover:opacity-100',\n        props.className\n      )}\n    >\n      {children}\n    </div>\n  )\n}\n\ntype ComposibleChatMessage = typeof ChatMessage & {\n  Avatar: typeof ChatMessageAvatar\n  Content: typeof ChatMessageContent\n  Actions: typeof ChatMessageActions\n}\n\nconst PrimiviteChatMessage = memo(ChatMessage, (prevProps, nextProps) => {\n  return (\n    !nextProps.isLast &&\n    prevProps.isLast === nextProps.isLast &&\n    prevProps.message === nextProps.message\n  )\n}) as unknown as ComposibleChatMessage\n\nPrimiviteChatMessage.Avatar = ChatMessageAvatar\nPrimiviteChatMessage.Content = ChatMessageContent\nPrimiviteChatMessage.Actions = ChatMessageActions\n\nexport default PrimiviteChatMessage\n","'use client'\n\nimport * as React from 'react'\n\nexport interface UseCopyToClipboardProps {\n  timeout?: number\n}\n\nexport function useCopyToClipboard({\n  timeout = 2000,\n}: UseCopyToClipboardProps) {\n  const [isCopied, setIsCopied] = React.useState<boolean>(false)\n\n  const copyToClipboard = (value: string) => {\n    if (typeof window === 'undefined' || !navigator.clipboard?.writeText) {\n      return\n    }\n\n    if (!value) {\n      return\n    }\n\n    navigator.clipboard.writeText(value).then(() => {\n      setIsCopied(true)\n\n      setTimeout(() => {\n        setIsCopied(false)\n      }, timeout)\n    })\n  }\n\n  return { isCopied, copyToClipboard }\n}\n","import {\n  ChatAgentEvents,\n  ChatEvents,\n  ChatFiles,\n  ChatImage,\n  ChatSources,\n  SuggestedQuestions,\n} from '../widgets/index.js' // this import needs the file extension as it's importing the widget bundle\nimport {\n  AgentEventData,\n  DocumentFileData,\n  EventData,\n  getAnnotationData,\n  getSourceAnnotationData,\n  ImageData,\n  MessageAnnotation,\n  MessageAnnotationType,\n  SuggestedQuestionsData,\n} from './annotation'\nimport { ChatHandler, Message } from './chat.interface'\n\nexport function EventAnnotations({\n  message,\n  showLoading,\n}: {\n  message: Message\n  showLoading: boolean\n}) {\n  const annotations = message.annotations as MessageAnnotation[] | undefined\n  const eventData =\n    annotations && annotations.length > 0\n      ? getAnnotationData<EventData>(annotations, MessageAnnotationType.EVENTS)\n      : null\n  if (!eventData?.length) return null\n  return <ChatEvents data={eventData} showLoading={showLoading} />\n}\n\nexport function AgentEventAnnotations({ message }: { message: Message }) {\n  const annotations = message.annotations as MessageAnnotation[] | undefined\n  const agentEventData =\n    annotations && annotations.length > 0\n      ? getAnnotationData<AgentEventData>(\n          annotations,\n          MessageAnnotationType.AGENT_EVENTS\n        )\n      : null\n  if (!agentEventData?.length) return null\n  return (\n    <ChatAgentEvents\n      data={agentEventData}\n      isFinished={Boolean(message.content)}\n    />\n  )\n}\n\nexport function ImageAnnotations({ message }: { message: Message }) {\n  const annotations = message.annotations as MessageAnnotation[] | undefined\n  const imageData =\n    annotations && annotations.length > 0\n      ? getAnnotationData<ImageData>(annotations, 'image')\n      : null\n  if (!imageData) return null\n  return imageData[0] ? <ChatImage data={imageData[0]} /> : null\n}\n\nexport function DocumentFileAnnotations({ message }: { message: Message }) {\n  const annotations = message.annotations as MessageAnnotation[] | undefined\n  const contentFileData =\n    annotations && annotations.length > 0\n      ? getAnnotationData<DocumentFileData>(\n          annotations,\n          MessageAnnotationType.DOCUMENT_FILE\n        )\n      : null\n  if (!contentFileData) return null\n  return contentFileData[0] ? <ChatFiles data={contentFileData[0]} /> : null\n}\n\nexport function SourceAnnotations({ message }: { message: Message }) {\n  const annotations = message.annotations as MessageAnnotation[] | undefined\n  const sourceData =\n    annotations && annotations.length > 0\n      ? getSourceAnnotationData(annotations)\n      : null\n  if (!sourceData) return null\n  return sourceData[0] ? <ChatSources data={sourceData[0]} /> : null\n}\n\nexport function SuggestedQuestionsAnnotations({\n  message,\n  append,\n}: {\n  message: Message\n  append: ChatHandler['append']\n}) {\n  const annotations = message.annotations as MessageAnnotation[] | undefined\n  const suggestedQuestionsData =\n    annotations && annotations.length > 0\n      ? getAnnotationData<SuggestedQuestionsData>(\n          annotations,\n          MessageAnnotationType.SUGGESTED_QUESTIONS\n        )\n      : null\n  if (!suggestedQuestionsData?.[0]) return null\n  return (\n    <SuggestedQuestions questions={suggestedQuestionsData[0]} append={append} />\n  )\n}\n","'use client'\n\nimport { useState } from 'react'\nimport { DocumentFileType, DocumentFile } from '../chat/annotation'\n\nconst docMineTypeMap: Record<string, DocumentFileType> = {\n  'text/csv': 'csv',\n  'application/pdf': 'pdf',\n  'text/plain': 'txt',\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document':\n    'docx',\n}\n\nexport function useFile({ uploadAPI }: { uploadAPI: string }) {\n  const [imageUrl, setImageUrl] = useState<string | null>(null)\n  const [files, setFiles] = useState<DocumentFile[]>([])\n\n  const addDoc = (file: DocumentFile) => {\n    const existedFile = files.find(f => f.id === file.id)\n    if (!existedFile) {\n      setFiles(prev => [...prev, file])\n      return true\n    }\n    return false\n  }\n\n  const removeDoc = (file: DocumentFile) => {\n    setFiles(prev => prev.filter(f => f.id !== file.id))\n  }\n\n  const reset = () => {\n    imageUrl && setImageUrl(null)\n    files.length && setFiles([])\n  }\n\n  const uploadContent = async (\n    file: File,\n    requestParams: any = {}\n  ): Promise<DocumentFile> => {\n    const base64 = await readContent({ file, asUrl: true })\n    const response = await fetch(uploadAPI, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        ...requestParams,\n        base64,\n        name: file.name,\n      }),\n    })\n    if (!response.ok) throw new Error('Failed to upload document.')\n    return (await response.json()) as DocumentFile\n  }\n\n  const getAnnotations = () => {\n    const annotations = []\n    if (imageUrl) {\n      annotations.push({\n        type: 'image',\n        data: { url: imageUrl },\n      })\n    }\n    if (files.length > 0) {\n      annotations.push({\n        type: 'document_file',\n        data: { files },\n      })\n    }\n    return annotations\n  }\n\n  const readContent = async (input: {\n    file: File\n    asUrl?: boolean\n  }): Promise<string> => {\n    const { file, asUrl } = input\n    const content = await new Promise<string>((resolve, reject) => {\n      const reader = new FileReader()\n      if (asUrl) {\n        reader.readAsDataURL(file)\n      } else {\n        reader.readAsText(file)\n      }\n      reader.onload = () => resolve(reader.result as string)\n      reader.onerror = error => reject(error)\n    })\n    return content\n  }\n\n  const uploadFile = async (file: File, requestParams: any = {}) => {\n    if (file.type.startsWith('image/')) {\n      const base64 = await readContent({ file, asUrl: true })\n      return setImageUrl(base64)\n    }\n\n    const filetype = docMineTypeMap[file.type]\n    if (!filetype) throw new Error('Unsupported document type.')\n    const newDoc = await uploadContent(file, requestParams)\n    return addDoc(newDoc)\n  }\n\n  return {\n    imageUrl,\n    setImageUrl,\n    files,\n    removeDoc,\n    reset,\n    getAnnotations,\n    uploadFile,\n  }\n}\n"],"mappings":"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","names":["MessageAnnotationType","import_react","import_react","React","import_jsx_runtime","React","import_jsx_runtime","import_jsx_runtime","_a","import_lucide_react","import_react","import_react","React","import_widgets","import_widgets","import_jsx_runtime","import_jsx_runtime","ContentPosition","_a","_b","import_jsx_runtime","import_jsx_runtime","import_react"]}