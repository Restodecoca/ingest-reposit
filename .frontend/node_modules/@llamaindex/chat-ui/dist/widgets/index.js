'use client'
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var __async = (__this, __arguments, generator) => {
  return new Promise((resolve, reject) => {
    var fulfilled = (value) => {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    };
    var rejected = (value) => {
      try {
        step(generator.throw(value));
      } catch (e) {
        reject(e);
      }
    };
    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
    step((generator = generator.apply(__this, __arguments)).next());
  });
};

// src/widgets/chat-agent-events.tsx
import { icons } from "lucide-react";
import { useMemo } from "react";

// src/ui/button.tsx
import { Slot } from "@radix-ui/react-slot";
import { cva } from "class-variance-authority";
import * as React from "react";

// src/lib/utils.ts
import { clsx } from "clsx";
import { twMerge } from "tailwind-merge";
function cn(...inputs) {
  return twMerge(clsx(inputs));
}

// src/ui/button.tsx
import { jsx } from "react/jsx-runtime";
var buttonVariants = cva(
  "inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50",
  {
    variants: {
      variant: {
        default: "bg-primary text-primary-foreground hover:bg-primary/90",
        destructive: "bg-destructive text-destructive-foreground hover:bg-destructive/90",
        outline: "border border-input bg-background hover:bg-accent hover:text-accent-foreground",
        secondary: "bg-secondary text-secondary-foreground hover:bg-secondary/80",
        ghost: "hover:bg-accent hover:text-accent-foreground",
        link: "text-primary underline-offset-4 hover:underline"
      },
      size: {
        default: "h-10 px-4 py-2",
        sm: "h-9 rounded-md px-3",
        lg: "h-11 rounded-md px-8",
        icon: "h-10 w-10"
      }
    },
    defaultVariants: {
      variant: "default",
      size: "default"
    }
  }
);
var Button = React.forwardRef(
  (_a, ref) => {
    var _b = _a, { className, variant, size, asChild = false } = _b, props = __objRest(_b, ["className", "variant", "size", "asChild"]);
    const Comp = asChild ? Slot : "button";
    return /* @__PURE__ */ jsx(
      Comp,
      __spreadValues({
        className: cn(buttonVariants({ variant, size, className })),
        ref
      }, props)
    );
  }
);
Button.displayName = "Button";

// src/ui/drawer.tsx
import * as React2 from "react";
import { Drawer as DrawerPrimitive } from "vaul";
import { jsx as jsx2, jsxs } from "react/jsx-runtime";
var Drawer = (_a) => {
  var _b = _a, {
    shouldScaleBackground = true
  } = _b, props = __objRest(_b, [
    "shouldScaleBackground"
  ]);
  return /* @__PURE__ */ jsx2(
    DrawerPrimitive.Root,
    __spreadValues({
      shouldScaleBackground
    }, props)
  );
};
Drawer.displayName = "Drawer";
var DrawerTrigger = DrawerPrimitive.Trigger;
var DrawerPortal = DrawerPrimitive.Portal;
var DrawerClose = DrawerPrimitive.Close;
var DrawerOverlay = React2.forwardRef((_a, ref) => {
  var _b = _a, { className } = _b, props = __objRest(_b, ["className"]);
  return /* @__PURE__ */ jsx2(
    DrawerPrimitive.Overlay,
    __spreadValues({
      ref,
      className: cn("fixed inset-0 z-50 bg-black/80", className)
    }, props)
  );
});
DrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName;
var DrawerContent = React2.forwardRef((_a, ref) => {
  var _b = _a, { className, children } = _b, props = __objRest(_b, ["className", "children"]);
  return /* @__PURE__ */ jsxs(DrawerPortal, { children: [
    /* @__PURE__ */ jsx2(DrawerOverlay, {}),
    /* @__PURE__ */ jsxs(
      DrawerPrimitive.Content,
      __spreadProps(__spreadValues({
        ref,
        className: cn(
          "bg-background fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border",
          className
        )
      }, props), {
        children: [
          /* @__PURE__ */ jsx2("div", { className: "bg-muted mx-auto mt-4 h-2 w-[100px] rounded-full" }),
          children
        ]
      })
    )
  ] });
});
DrawerContent.displayName = "DrawerContent";
var DrawerHeader = (_a) => {
  var _b = _a, {
    className
  } = _b, props = __objRest(_b, [
    "className"
  ]);
  return /* @__PURE__ */ jsx2(
    "div",
    __spreadValues({
      className: cn("grid gap-1.5 p-4 text-center sm:text-left", className)
    }, props)
  );
};
DrawerHeader.displayName = "DrawerHeader";
var DrawerFooter = (_a) => {
  var _b = _a, {
    className
  } = _b, props = __objRest(_b, [
    "className"
  ]);
  return /* @__PURE__ */ jsx2(
    "div",
    __spreadValues({
      className: cn("mt-auto flex flex-col gap-2 p-4", className)
    }, props)
  );
};
DrawerFooter.displayName = "DrawerFooter";
var DrawerTitle = React2.forwardRef((_a, ref) => {
  var _b = _a, { className } = _b, props = __objRest(_b, ["className"]);
  return /* @__PURE__ */ jsx2(
    DrawerPrimitive.Title,
    __spreadValues({
      ref,
      className: cn(
        "text-lg font-semibold leading-none tracking-tight",
        className
      )
    }, props)
  );
});
DrawerTitle.displayName = DrawerPrimitive.Title.displayName;
var DrawerDescription = React2.forwardRef((_a, ref) => {
  var _b = _a, { className } = _b, props = __objRest(_b, ["className"]);
  return /* @__PURE__ */ jsx2(
    DrawerPrimitive.Description,
    __spreadValues({
      ref,
      className: cn("text-muted-foreground text-sm", className)
    }, props)
  );
});
DrawerDescription.displayName = DrawerPrimitive.Description.displayName;

// src/widgets/markdown.tsx
import { memo as memo2 } from "react";
import ReactMarkdown from "react-markdown";
import rehypeKatex from "rehype-katex";
import remarkGfm from "remark-gfm";
import remarkMath from "remark-math";

// src/widgets/codeblock.tsx
import hljs from "highlight.js";
import { Check, Copy, Download } from "lucide-react";
import { memo, useEffect, useRef } from "react";

// src/hook/use-copy-to-clipboard.tsx
import * as React3 from "react";
function useCopyToClipboard({
  timeout = 2e3
}) {
  const [isCopied, setIsCopied] = React3.useState(false);
  const copyToClipboard = (value) => {
    var _a;
    if (typeof window === "undefined" || !((_a = navigator.clipboard) == null ? void 0 : _a.writeText)) {
      return;
    }
    if (!value) {
      return;
    }
    navigator.clipboard.writeText(value).then(() => {
      setIsCopied(true);
      setTimeout(() => {
        setIsCopied(false);
      }, timeout);
    });
  };
  return { isCopied, copyToClipboard };
}

// src/widgets/codeblock.tsx
import { jsx as jsx3, jsxs as jsxs2 } from "react/jsx-runtime";
var programmingLanguages = {
  javascript: ".js",
  python: ".py",
  java: ".java",
  c: ".c",
  cpp: ".cpp",
  "c++": ".cpp",
  "c#": ".cs",
  ruby: ".rb",
  php: ".php",
  swift: ".swift",
  "objective-c": ".m",
  kotlin: ".kt",
  typescript: ".ts",
  go: ".go",
  perl: ".pl",
  rust: ".rs",
  scala: ".scala",
  haskell: ".hs",
  lua: ".lua",
  shell: ".sh",
  sql: ".sql",
  html: ".html",
  css: ".css"
  // add more file extensions here, make sure the key is same as language prop in CodeBlock.tsx component
};
var generateRandomString = (length, lowercase = false) => {
  const chars = "ABCDEFGHJKLMNPQRSTUVWXY3456789";
  let result = "";
  for (let i = 0; i < length; i++) {
    result += chars.charAt(Math.floor(Math.random() * chars.length));
  }
  return lowercase ? result.toLowerCase() : result;
};
var CodeBlock = memo(({ language, value, className }) => {
  const { isCopied, copyToClipboard } = useCopyToClipboard({ timeout: 2e3 });
  const codeRef = useRef(null);
  useEffect(() => {
    if (codeRef.current && codeRef.current.dataset.highlighted !== "yes") {
      hljs.highlightElement(codeRef.current);
    }
  }, [language, value]);
  const downloadAsFile = () => {
    if (typeof window === "undefined") {
      return;
    }
    const fileExtension = programmingLanguages[language] || ".file";
    const suggestedFileName = `file-${generateRandomString(
      3,
      true
    )}${fileExtension}`;
    const fileName = window.prompt("Enter file name", suggestedFileName);
    if (!fileName) {
      return;
    }
    const blob = new Blob([value], { type: "text/plain" });
    const url = URL.createObjectURL(blob);
    const link = document.createElement("a");
    link.download = fileName;
    link.href = url;
    link.style.display = "none";
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    URL.revokeObjectURL(url);
  };
  const onCopy = () => {
    if (isCopied) return;
    copyToClipboard(value);
  };
  return /* @__PURE__ */ jsxs2(
    "div",
    {
      className: `codeblock relative w-full bg-zinc-950 font-sans ${className}`,
      children: [
        /* @__PURE__ */ jsxs2("div", { className: "flex w-full items-center justify-between bg-zinc-800 px-6 py-2 pr-4 text-zinc-100", children: [
          /* @__PURE__ */ jsx3("span", { className: "text-xs lowercase", children: language }),
          /* @__PURE__ */ jsxs2("div", { className: "flex items-center space-x-1", children: [
            /* @__PURE__ */ jsxs2(Button, { variant: "ghost", onClick: downloadAsFile, size: "icon", children: [
              /* @__PURE__ */ jsx3(Download, {}),
              /* @__PURE__ */ jsx3("span", { className: "sr-only", children: "Download" })
            ] }),
            /* @__PURE__ */ jsxs2(Button, { variant: "ghost", size: "icon", onClick: onCopy, children: [
              isCopied ? /* @__PURE__ */ jsx3(Check, { className: "h-4 w-4" }) : /* @__PURE__ */ jsx3(Copy, { className: "h-4 w-4" }),
              /* @__PURE__ */ jsx3("span", { className: "sr-only", children: "Copy code" })
            ] })
          ] })
        ] }),
        /* @__PURE__ */ jsx3("pre", { className: "border border-zinc-700 text-white", children: /* @__PURE__ */ jsx3("code", { ref: codeRef, className: `language-${language} font-mono`, children: value }) })
      ]
    }
  );
});
CodeBlock.displayName = "CodeBlock";

// src/chat/annotation.ts
var DOCUMENT_FILE_TYPES = [
  "csv",
  "pdf",
  "txt",
  "docx"
];

// src/widgets/document-info.tsx
import {
  HoverCard,
  HoverCardContent,
  HoverCardTrigger
} from "@radix-ui/react-hover-card";
import { Check as Check2, Copy as Copy2, FileIcon, XCircleIcon } from "lucide-react";

// src/widgets/pdf-dialog.tsx
import { lazy } from "react";
import { jsx as jsx4, jsxs as jsxs3 } from "react/jsx-runtime";
var PDFViewer = lazy(
  () => import("@llamaindex/pdf-viewer").then((m) => ({ default: m.PDFViewer }))
);
var PdfFocusProvider = lazy(
  () => import("@llamaindex/pdf-viewer").then((m) => ({ default: m.PdfFocusProvider }))
);
function PdfDialog(props) {
  return /* @__PURE__ */ jsxs3(Drawer, { direction: "left", children: [
    /* @__PURE__ */ jsx4(DrawerTrigger, { asChild: true, children: props.trigger }),
    /* @__PURE__ */ jsxs3(DrawerContent, { className: "mt-24 h-full max-h-[96%] w-3/5 ", children: [
      /* @__PURE__ */ jsxs3(DrawerHeader, { className: "flex justify-between", children: [
        /* @__PURE__ */ jsxs3("div", { className: "space-y-2", children: [
          /* @__PURE__ */ jsx4(DrawerTitle, { children: "PDF Content" }),
          /* @__PURE__ */ jsxs3(DrawerDescription, { children: [
            "File URL:",
            " ",
            /* @__PURE__ */ jsx4(
              "a",
              {
                className: "hover:text-blue-900",
                href: props.url,
                target: "_blank",
                rel: "noopener",
                children: props.url
              }
            )
          ] })
        ] }),
        /* @__PURE__ */ jsx4(DrawerClose, { asChild: true, children: /* @__PURE__ */ jsx4(Button, { variant: "outline", children: "Close" }) })
      ] }),
      /* @__PURE__ */ jsx4("div", { className: "m-4", children: /* @__PURE__ */ jsx4(PdfFocusProvider, { children: /* @__PURE__ */ jsx4(
        PDFViewer,
        {
          file: {
            id: props.documentId,
            url: props.url
          }
        }
      ) }) })
    ] })
  ] });
}

// src/widgets/source-number-button.tsx
import { jsx as jsx5 } from "react/jsx-runtime";
function SourceNumberButton({
  index,
  className
}) {
  return /* @__PURE__ */ jsx5(
    "span",
    {
      className: cn(
        "inline-flex h-5 w-5 items-center justify-center rounded-full bg-gray-100 text-xs",
        className
      ),
      children: index + 1
    }
  );
}

// src/ui/icons/docx.tsx
import { jsx as jsx6, jsxs as jsxs4 } from "react/jsx-runtime";
var DocxIcon = ({
  width = 40,
  height = 40,
  className
}) => {
  return /* @__PURE__ */ jsxs4(
    "svg",
    {
      width,
      height,
      viewBox: "-4 0 64 64",
      xmlns: "http://www.w3.org/2000/svg",
      className,
      children: [
        /* @__PURE__ */ jsxs4("g", { fillRule: "evenodd", children: [
          /* @__PURE__ */ jsx6(
            "path",
            {
              d: "m5.11 0a5.07 5.07 0 0 0 -5.11 5v53.88a5.07 5.07 0 0 0 5.11 5.12h45.78a5.07 5.07 0 0 0 5.11-5.12v-38.6l-18.94-20.28z",
              fill: "#107cad"
            }
          ),
          /* @__PURE__ */ jsx6(
            "path",
            {
              d: "m56 20.35v1h-12.82s-6.31-1.26-6.13-6.71c0 0 .21 5.71 6 5.71z",
              fill: "#084968"
            }
          ),
          /* @__PURE__ */ jsx6(
            "path",
            {
              d: "m37.07 0v14.56a5.78 5.78 0 0 0 6.11 5.79h12.82z",
              fill: "#90d0fe",
              opacity: ".5"
            }
          )
        ] }),
        /* @__PURE__ */ jsx6(
          "path",
          {
            d: "m14.24 53.86h-3a1.08 1.08 0 0 1 -1.08-1.08v-9.85a1.08 1.08 0 0 1 1.08-1.08h3a6 6 0 1 1 0 12zm0-10.67h-2.61v9.34h2.61a4.41 4.41 0 0 0 4.61-4.66 4.38 4.38 0 0 0 -4.61-4.68zm14.42 10.89a5.86 5.86 0 0 1 -6-6.21 6 6 0 1 1 11.92 0 5.87 5.87 0 0 1 -5.92 6.21zm0-11.09c-2.7 0-4.41 2.07-4.41 4.88s1.71 4.88 4.41 4.88 4.41-2.09 4.41-4.88-1.72-4.87-4.41-4.87zm18.45.38a.75.75 0 0 1 .2.52.71.71 0 0 1 -.7.72.64.64 0 0 1 -.51-.24 4.06 4.06 0 0 0 -3-1.38 4.61 4.61 0 0 0 -4.63 4.88 4.63 4.63 0 0 0 4.63 4.88 4 4 0 0 0 3-1.37.7.7 0 0 1 .51-.24.72.72 0 0 1 .7.74.78.78 0 0 1 -.2.51 5.33 5.33 0 0 1 -4 1.69 6.22 6.22 0 0 1 0-12.43 5.26 5.26 0 0 1 4 1.72z",
            fill: "#ffffff"
          }
        )
      ]
    }
  );
};

// src/ui/icons/pdf.tsx
import { jsx as jsx7, jsxs as jsxs5 } from "react/jsx-runtime";
var PDFIcon = ({
  className,
  width = 40,
  height = 40
}) => {
  return /* @__PURE__ */ jsx7(
    "svg",
    {
      width,
      height,
      version: "1.1",
      id: "Layer_1",
      xmlns: "http://www.w3.org/2000/svg",
      xmlnsXlink: "http://www.w3.org/1999/xlink",
      viewBox: "0 0 309.267 309.267",
      className,
      children: /* @__PURE__ */ jsxs5("g", { children: [
        /* @__PURE__ */ jsx7(
          "path",
          {
            style: { fill: "#E2574C" },
            d: "M38.658,0h164.23l87.049,86.711v203.227c0,10.679-8.659,19.329-19.329,19.329H38.658\n            c-10.67,0-19.329-8.65-19.329-19.329V19.329C19.329,8.65,27.989,0,38.658,0z"
          }
        ),
        /* @__PURE__ */ jsx7(
          "path",
          {
            style: { fill: "#B53629" },
            d: "M289.658,86.981h-67.372c-10.67,0-19.329-8.659-19.329-19.329V0.193L289.658,86.981z"
          }
        ),
        /* @__PURE__ */ jsx7(
          "path",
          {
            style: { fill: "#FFFFFF" },
            d: "M217.434,146.544c3.238,0,4.823-2.822,4.823-5.557c0-2.832-1.653-5.567-4.823-5.567h-18.44\n            c-3.605,0-5.615,2.986-5.615,6.282v45.317c0,4.04,2.3,6.282,5.412,6.282c3.093,0,5.403-2.242,5.403-6.282v-12.438h11.153\n            c3.46,0,5.19-2.832,5.19-5.644c0-2.754-1.73-5.49-5.19-5.49h-11.153v-16.903C204.194,146.544,217.434,146.544,217.434,146.544z\n            M155.107,135.42h-13.492c-3.663,0-6.263,2.513-6.263,6.243v45.395c0,4.629,3.74,6.079,6.417,6.079h14.159\n            c16.758,0,27.824-11.027,27.824-28.047C183.743,147.095,173.325,135.42,155.107,135.42z M155.755,181.946h-8.225v-35.334h7.413\n            c11.221,0,16.101,7.529,16.101,17.918C171.044,174.253,166.25,181.946,155.755,181.946z M106.33,135.42H92.964\n            c-3.779,0-5.886,2.493-5.886,6.282v45.317c0,4.04,2.416,6.282,5.663,6.282s5.663-2.242,5.663-6.282v-13.231h8.379\n            c10.341,0,18.875-7.326,18.875-19.107C125.659,143.152,117.425,135.42,106.33,135.42z M106.108,163.158h-7.703v-17.097h7.703\n            c4.755,0,7.78,3.711,7.78,8.553C113.878,159.447,110.863,163.158,106.108,163.158z"
          }
        )
      ] })
    }
  );
};

// src/ui/icons/sheet.tsx
import { jsx as jsx8, jsxs as jsxs6 } from "react/jsx-runtime";
var SheetIcon = () => /* @__PURE__ */ jsxs6(
  "svg",
  {
    width: "49px",
    height: "67px",
    viewBox: "0 0 49 67",
    version: "1.1",
    xmlns: "http://www.w3.org/2000/svg",
    xmlnsXlink: "http://www.w3.org/1999/xlink",
    children: [
      /* @__PURE__ */ jsx8("title", { children: "Sheets-icon" }),
      /* @__PURE__ */ jsx8("desc", { children: "Created with Sketch." }),
      /* @__PURE__ */ jsxs6("defs", { children: [
        /* @__PURE__ */ jsx8(
          "path",
          {
            d: "M29.5833333,0 L4.4375,0 C1.996875,0 0,1.996875 0,4.4375 L0,60.6458333 C0,63.0864583 1.996875,65.0833333 4.4375,65.0833333 L42.8958333,65.0833333 C45.3364583,65.0833333 47.3333333,63.0864583 47.3333333,60.6458333 L47.3333333,17.75 L29.5833333,0 Z",
            id: "path-1"
          }
        ),
        /* @__PURE__ */ jsxs6(
          "linearGradient",
          {
            x1: "50.0053945%",
            y1: "8.58610612%",
            x2: "50.0053945%",
            y2: "100.013939%",
            id: "linearGradient-7",
            children: [
              /* @__PURE__ */ jsx8("stop", { stopColor: "#263238", stopOpacity: "0.2", offset: "0%" }),
              /* @__PURE__ */ jsx8("stop", { stopColor: "#263238", stopOpacity: "0.02", offset: "100%" })
            ]
          }
        ),
        /* @__PURE__ */ jsxs6(
          "radialGradient",
          {
            cx: "3.16804688%",
            cy: "2.71744318%",
            fx: "3.16804688%",
            fy: "2.71744318%",
            r: "161.248516%",
            gradientTransform: "translate(0.031680,0.027174),scale(1.000000,0.727273),translate(-0.031680,-0.027174)",
            id: "radialGradient-16",
            children: [
              /* @__PURE__ */ jsx8("stop", { stopColor: "#FFFFFF", stopOpacity: "0.1", offset: "0%" }),
              /* @__PURE__ */ jsx8("stop", { stopColor: "#FFFFFF", stopOpacity: "0", offset: "100%" })
            ]
          }
        )
      ] }),
      /* @__PURE__ */ jsx8("g", { id: "Page-1", stroke: "none", strokeWidth: "1", fill: "none", fillRule: "evenodd", children: /* @__PURE__ */ jsx8(
        "g",
        {
          id: "Consumer-Apps-Sheets-Large-VD-R8-",
          transform: "translate(-451.000000, -451.000000)",
          children: /* @__PURE__ */ jsx8("g", { id: "Hero", transform: "translate(0.000000, 63.000000)", children: /* @__PURE__ */ jsx8("g", { id: "Personal", transform: "translate(277.000000, 299.000000)", children: /* @__PURE__ */ jsx8("g", { id: "Sheets-icon", transform: "translate(174.833333, 89.958333)", children: /* @__PURE__ */ jsxs6("g", { id: "Group", children: [
            /* @__PURE__ */ jsxs6("g", { id: "Clipped", children: [
              /* @__PURE__ */ jsx8("mask", { id: "mask-2", fill: "white", children: /* @__PURE__ */ jsx8("use", { xlinkHref: "#path-1" }) }),
              /* @__PURE__ */ jsx8(
                "path",
                {
                  d: "M29.5833333,0 L4.4375,0 C1.996875,0 0,1.996875 0,4.4375 L0,60.6458333 C0,63.0864583 1.996875,65.0833333 4.4375,65.0833333 L42.8958333,65.0833333 C45.3364583,65.0833333 47.3333333,63.0864583 47.3333333,60.6458333 L47.3333333,17.75 L36.9791667,10.3541667 L29.5833333,0 Z",
                  id: "Path",
                  fill: "#0F9D58",
                  fillRule: "nonzero",
                  mask: "url(#mask-2)"
                }
              )
            ] }),
            /* @__PURE__ */ jsxs6("g", { id: "Clipped", children: [
              /* @__PURE__ */ jsx8("mask", { id: "mask-4", fill: "white", children: /* @__PURE__ */ jsx8("use", { xlinkHref: "#path-1" }) }),
              /* @__PURE__ */ jsx8(
                "path",
                {
                  d: "M11.8333333,31.8020833 L11.8333333,53.25 L35.5,53.25 L35.5,31.8020833 L11.8333333,31.8020833 Z M22.1875,50.2916667 L14.7916667,50.2916667 L14.7916667,46.59375 L22.1875,46.59375 L22.1875,50.2916667 Z M22.1875,44.375 L14.7916667,44.375 L14.7916667,40.6770833 L22.1875,40.6770833 L22.1875,44.375 Z M22.1875,38.4583333 L14.7916667,38.4583333 L14.7916667,34.7604167 L22.1875,34.7604167 L22.1875,38.4583333 Z M32.5416667,50.2916667 L25.1458333,50.2916667 L25.1458333,46.59375 L32.5416667,46.59375 L32.5416667,50.2916667 Z M32.5416667,44.375 L25.1458333,44.375 L25.1458333,40.6770833 L32.5416667,40.6770833 L32.5416667,44.375 Z M32.5416667,38.4583333 L25.1458333,38.4583333 L25.1458333,34.7604167 L32.5416667,34.7604167 L32.5416667,38.4583333 Z",
                  id: "Shape",
                  fill: "#F1F1F1",
                  fillRule: "nonzero",
                  mask: "url(#mask-4)"
                }
              )
            ] }),
            /* @__PURE__ */ jsxs6("g", { id: "Clipped", children: [
              /* @__PURE__ */ jsx8("mask", { id: "mask-6", fill: "white", children: /* @__PURE__ */ jsx8("use", { xlinkHref: "#path-1" }) }),
              /* @__PURE__ */ jsx8(
                "polygon",
                {
                  id: "Path",
                  fill: "url(#linearGradient-7)",
                  fillRule: "nonzero",
                  mask: "url(#mask-6)",
                  points: "30.8813021 16.4520313 47.3333333 32.9003646 47.3333333 17.75"
                }
              )
            ] }),
            /* @__PURE__ */ jsxs6("g", { id: "Clipped", children: [
              /* @__PURE__ */ jsx8("mask", { id: "mask-9", fill: "white", children: /* @__PURE__ */ jsx8("use", { xlinkHref: "#path-1" }) }),
              /* @__PURE__ */ jsx8("g", { id: "Group", mask: "url(#mask-9)", children: /* @__PURE__ */ jsx8("g", { transform: "translate(26.625000, -2.958333)", children: /* @__PURE__ */ jsx8(
                "path",
                {
                  d: "M2.95833333,2.95833333 L2.95833333,16.2708333 C2.95833333,18.7225521 4.94411458,20.7083333 7.39583333,20.7083333 L20.7083333,20.7083333 L2.95833333,2.95833333 Z",
                  id: "Path",
                  fill: "#87CEAC",
                  fillRule: "nonzero"
                }
              ) }) })
            ] }),
            /* @__PURE__ */ jsxs6("g", { id: "Clipped", children: [
              /* @__PURE__ */ jsx8("mask", { id: "mask-11", fill: "white", children: /* @__PURE__ */ jsx8("use", { xlinkHref: "#path-1" }) }),
              /* @__PURE__ */ jsx8(
                "path",
                {
                  d: "M4.4375,0 C1.996875,0 0,1.996875 0,4.4375 L0,4.80729167 C0,2.36666667 1.996875,0.369791667 4.4375,0.369791667 L29.5833333,0.369791667 L29.5833333,0 L4.4375,0 Z",
                  id: "Path",
                  fillOpacity: "0.2",
                  fill: "#FFFFFF",
                  fillRule: "nonzero",
                  mask: "url(#mask-11)"
                }
              )
            ] }),
            /* @__PURE__ */ jsxs6("g", { id: "Clipped", children: [
              /* @__PURE__ */ jsx8("mask", { id: "mask-13", fill: "white", children: /* @__PURE__ */ jsx8("use", { xlinkHref: "#path-1" }) }),
              /* @__PURE__ */ jsx8(
                "path",
                {
                  d: "M42.8958333,64.7135417 L4.4375,64.7135417 C1.996875,64.7135417 0,62.7166667 0,60.2760417 L0,60.6458333 C0,63.0864583 1.996875,65.0833333 4.4375,65.0833333 L42.8958333,65.0833333 C45.3364583,65.0833333 47.3333333,63.0864583 47.3333333,60.6458333 L47.3333333,25.1666667 L42.8958333,21.0208333 L42.8958333,64.7135417 Z",
                  id: "Path",
                  fill: "url(#radialGradient-16)",
                  fillRule: "nonzero",
                  mask: "url(#mask-13)"
                }
              )
            ] })
          ] }) }) }) })
        }
      ) })
    ]
  }
);

// src/ui/icons/txt.tsx
import { jsx as jsx9, jsxs as jsxs7 } from "react/jsx-runtime";
var TxtIcon = ({
  className,
  width = 40,
  height = 40
}) => {
  return /* @__PURE__ */ jsxs7(
    "svg",
    {
      width,
      height,
      version: "1.1",
      id: "Layer_1",
      xmlns: "http://www.w3.org/2000/svg",
      xmlnsXlink: "http://www.w3.org/1999/xlink",
      viewBox: "0 0 512 512",
      className,
      children: [
        /* @__PURE__ */ jsx9(
          "path",
          {
            style: { fill: "#E2E5E7" },
            d: "M128,0c-17.6,0-32,14.4-32,32v448c0,17.6,14.4,32,32,32h320c17.6,0,32-14.4,32-32V128L352,0H128z"
          }
        ),
        /* @__PURE__ */ jsx9(
          "path",
          {
            style: { fill: "#B0B7BD" },
            d: "M384,128h96L352,0v96C352,113.6,366.4,128,384,128z"
          }
        ),
        /* @__PURE__ */ jsx9("polygon", { style: { fill: "#CAD1D8" }, points: "480,224 384,128 480,128 " }),
        /* @__PURE__ */ jsx9(
          "path",
          {
            style: { fill: "#576D7E" },
            d: "M416,416c0,8.8-7.2,16-16,16H48c-8.8,0-16-7.2-16-16V256c0-8.8,7.2-16,16-16h352c8.8,0,16,7.2,16,16V416z"
          }
        ),
        /* @__PURE__ */ jsxs7("g", { children: [
          /* @__PURE__ */ jsx9(
            "path",
            {
              style: { fill: "#FFFFFF" },
              d: "M132.784,311.472H110.4c-11.136,0-11.136-16.368,0-16.368h60.512c11.392,0,11.392,16.368,0,16.368h-21.248v64.592c0,11.12-16.896,11.392-16.896,0v-64.592H132.784z"
            }
          ),
          /* @__PURE__ */ jsx9(
            "path",
            {
              style: { fill: "#FFFFFF" },
              d: "M224.416,326.176l22.272-27.888c6.656-8.688,19.568,2.432,12.288,10.752c-7.68,9.088-15.728,18.944-23.424,29.024l26.112,32.496c7.024,9.6-7.04,18.816-13.952,9.344l-23.536-30.192l-23.152,30.832c-6.528,9.328-20.992-1.152-13.68-9.856l25.696-32.624c-8.048-10.096-15.856-19.936-23.664-29.024c-8.064-9.6,6.912-19.44,12.784-10.48L224.416,326.176z"
            }
          ),
          /* @__PURE__ */ jsx9(
            "path",
            {
              style: { fill: "#FFFFFF" },
              d: "M298.288,311.472H275.92c-11.136,0-11.136-16.368,0-16.368h60.496c11.392,0,11.392,16.368,0,16.368h-21.232v64.592c0,11.12-16.896,11.392-16.896,0V311.472z"
            }
          )
        ] }),
        /* @__PURE__ */ jsx9(
          "path",
          {
            style: { fill: "#CAD1D8" },
            d: "M400,432H96v16h304c8.8,0,16-7.2,16-16v-16C416,424.8,408.8,432,400,432z"
          }
        )
      ]
    }
  );
};

// src/widgets/document-info.tsx
import { jsx as jsx10, jsxs as jsxs8 } from "react/jsx-runtime";
function DocumentInfo({
  document: document2,
  className,
  onRemove,
  startIndex = 0
}) {
  const { url, sources } = document2;
  const urlParts = url.split("/");
  const fileName = urlParts.length > 0 ? urlParts[urlParts.length - 1] : url;
  const fileExt = fileName == null ? void 0 : fileName.split(".").pop();
  const previewFile = {
    name: fileName,
    type: fileExt
  };
  const DocumentDetail = /* @__PURE__ */ jsxs8("div", { className: `relative ${className}`, children: [
    /* @__PURE__ */ jsx10(
      DocumentPreviewCard,
      {
        className: "cursor-pointer",
        file: previewFile,
        onRemove
      }
    ),
    /* @__PURE__ */ jsx10("div", { className: "absolute bottom-2 right-2 flex space-x-2", children: sources.map((node, index) => /* @__PURE__ */ jsx10("div", { children: /* @__PURE__ */ jsx10(SourceInfo, { node, index: startIndex + index }) }, node.id)) })
  ] });
  if (url.endsWith(".pdf")) {
    return /* @__PURE__ */ jsx10(PdfDialog, { documentId: url, url, trigger: DocumentDetail });
  }
  return /* @__PURE__ */ jsx10("div", { onClick: () => window.open(url, "_blank"), children: DocumentDetail });
}
function SourceInfo({ node, index }) {
  if (!node) return /* @__PURE__ */ jsx10(SourceNumberButton, { index });
  return /* @__PURE__ */ jsxs8(HoverCard, { children: [
    /* @__PURE__ */ jsx10(
      HoverCardTrigger,
      {
        className: "cursor-default",
        onClick: (e) => {
          e.preventDefault();
          e.stopPropagation();
        },
        children: /* @__PURE__ */ jsx10(
          SourceNumberButton,
          {
            index,
            className: "hover:bg-primary hover:text-white"
          }
        )
      }
    ),
    /* @__PURE__ */ jsx10(HoverCardContent, { className: "w-[400px] bg-white p-4", children: /* @__PURE__ */ jsx10(NodeInfo, { nodeInfo: node }) })
  ] });
}
function NodeInfo({ nodeInfo }) {
  var _a, _b, _c, _d;
  const { isCopied, copyToClipboard } = useCopyToClipboard({ timeout: 1e3 });
  const pageNumber = (
    // XXX: page_label is used in Python, but page_number is used by Typescript
    (_d = (_c = (_a = nodeInfo.metadata) == null ? void 0 : _a.page_number) != null ? _c : (_b = nodeInfo.metadata) == null ? void 0 : _b.page_label) != null ? _d : null
  );
  return /* @__PURE__ */ jsxs8("div", { className: "space-y-4", children: [
    /* @__PURE__ */ jsxs8("div", { className: "flex items-center justify-between", children: [
      /* @__PURE__ */ jsx10("span", { className: "font-semibold", children: pageNumber ? `On page ${pageNumber}:` : "Node content:" }),
      nodeInfo.text && /* @__PURE__ */ jsx10(
        Button,
        {
          onClick: (e) => {
            e.stopPropagation();
            copyToClipboard(nodeInfo.text);
          },
          size: "icon",
          variant: "ghost",
          className: "h-12 w-12 shrink-0",
          children: isCopied ? /* @__PURE__ */ jsx10(Check2, { className: "h-4 w-4" }) : /* @__PURE__ */ jsx10(Copy2, { className: "h-4 w-4" })
        }
      )
    ] }),
    nodeInfo.text && /* @__PURE__ */ jsxs8("pre", { className: "max-h-[200px] overflow-auto whitespace-pre-line", children: [
      "\u201C",
      nodeInfo.text,
      "\u201D"
    ] })
  ] });
}
var FileIconMap = {
  csv: /* @__PURE__ */ jsx10(SheetIcon, {}),
  pdf: /* @__PURE__ */ jsx10(PDFIcon, {}),
  docx: /* @__PURE__ */ jsx10(DocxIcon, {}),
  txt: /* @__PURE__ */ jsx10(TxtIcon, {})
};
function DocumentPreviewCard(props) {
  var _a;
  const { onRemove, file, className } = props;
  return /* @__PURE__ */ jsxs8(
    "div",
    {
      className: cn(
        "bg-secondary relative w-60 max-w-60 rounded-lg p-2 text-sm",
        className
      ),
      children: [
        /* @__PURE__ */ jsxs8("div", { className: "flex flex-row items-center gap-2", children: [
          /* @__PURE__ */ jsx10("div", { className: "relative flex h-8 w-8 shrink-0 items-center justify-center overflow-hidden rounded-md", children: (_a = FileIconMap[file.type]) != null ? _a : /* @__PURE__ */ jsx10(FileIcon, {}) }),
          /* @__PURE__ */ jsxs8("div", { className: "overflow-hidden", children: [
            /* @__PURE__ */ jsxs8("div", { className: "truncate font-semibold", children: [
              file.name,
              " ",
              file.size ? `(${inKB(file.size)} KB)` : ""
            ] }),
            file.type && /* @__PURE__ */ jsx10("div", { className: "text-token-text-tertiary flex items-center gap-2 truncate", children: /* @__PURE__ */ jsxs8("span", { children: [
              file.type.toUpperCase(),
              " File"
            ] }) })
          ] })
        ] }),
        onRemove && /* @__PURE__ */ jsx10(
          "div",
          {
            className: cn(
              "absolute -right-2 -top-2 z-10 h-6 w-6 rounded-full bg-gray-500 text-white"
            ),
            children: /* @__PURE__ */ jsx10(
              XCircleIcon,
              {
                className: "h-6 w-6 rounded-full bg-gray-500 text-white",
                onClick: (e) => {
                  e.stopPropagation();
                  onRemove();
                }
              }
            )
          }
        )
      ]
    }
  );
}
function inKB(size) {
  return Math.round(size / 1024 * 10) / 10;
}

// src/widgets/markdown.tsx
import { jsx as jsx11 } from "react/jsx-runtime";
var MemoizedReactMarkdown = memo2(
  ReactMarkdown,
  (prevProps, nextProps) => prevProps.children === nextProps.children && prevProps.className === nextProps.className
);
var preprocessLaTeX = (content) => {
  const blockProcessedContent = content.replace(
    /\\\[([\s\S]*?)\\\]/g,
    (_, equation) => `$$${equation}$$`
  );
  const inlineProcessedContent = blockProcessedContent.replace(
    /\\\[([\s\S]*?)\\\]/g,
    (_, equation) => `$${equation}$`
  );
  return inlineProcessedContent;
};
var preprocessCitations = (input, sources) => {
  let content = input;
  if (sources) {
    const citationRegex = /\[citation:(.+?)\]\(\)/g;
    let match;
    while ((match = citationRegex.exec(content)) !== null) {
      const citationId = match[1];
      const sourceNode = sources.nodes.find((node) => node.id === citationId);
      if (sourceNode !== void 0) {
        content = content.replace(
          match[0],
          `[citation:${sources.nodes.indexOf(sourceNode)}]()`
        );
      } else {
        content = content.replace(match[0], "");
      }
    }
  }
  return content;
};
var preprocessContent = (content, sources) => {
  return preprocessCitations(preprocessLaTeX(content), sources);
};
function Markdown({
  content,
  sources,
  backend
}) {
  const processedContent = preprocessContent(content, sources);
  return /* @__PURE__ */ jsx11("div", { children: /* @__PURE__ */ jsx11(
    MemoizedReactMarkdown,
    {
      className: "prose dark:prose-invert prose-p:leading-relaxed prose-pre:p-0 custom-markdown break-words",
      remarkPlugins: [remarkGfm, remarkMath],
      rehypePlugins: [rehypeKatex],
      components: {
        p({ children }) {
          return /* @__PURE__ */ jsx11("div", { className: "mb-2 last:mb-0", children });
        },
        code(_a) {
          var _b = _a, { inline, className, children } = _b, props = __objRest(_b, ["inline", "className", "children"]);
          if (children.length) {
            if (children[0] === "\u258D") {
              return /* @__PURE__ */ jsx11("span", { className: "mt-1 animate-pulse cursor-default", children: "\u258D" });
            }
            children[0] = children[0].replace("`\u258D`", "\u258D");
          }
          const match = /language-(\w+)/.exec(className || "");
          if (inline) {
            return /* @__PURE__ */ jsx11("code", __spreadProps(__spreadValues({ className }, props), { children }));
          }
          return /* @__PURE__ */ jsx11(
            CodeBlock,
            __spreadValues({
              language: match && match[1] || "",
              value: String(children).replace(/\n$/, ""),
              className: "mb-2"
            }, props),
            Math.random()
          );
        },
        a({ href, children }) {
          var _a;
          if (href == null ? void 0 : href.startsWith(`${backend}/api/files`)) {
            const fileExtension = (_a = href.split(".").pop()) == null ? void 0 : _a.toLowerCase();
            if (fileExtension && DOCUMENT_FILE_TYPES.includes(fileExtension)) {
              return /* @__PURE__ */ jsx11(
                DocumentInfo,
                {
                  document: {
                    url: backend ? new URL(decodeURIComponent(href)).href : href,
                    sources: []
                  },
                  className: "mb-2 mt-2"
                }
              );
            }
          }
          if (Array.isArray(children) && typeof children[0] === "string" && children[0].startsWith("citation:")) {
            const index = Number(children[0].replace("citation:", ""));
            if (!isNaN(index)) {
              return /* @__PURE__ */ jsx11(SourceNumberButton, { index });
            }
            return null;
          }
          return /* @__PURE__ */ jsx11("a", { href, target: "_blank", rel: "noopener", children });
        }
      },
      children: processedContent
    }
  ) });
}

// src/ui/progress.tsx
import * as ProgressPrimitive from "@radix-ui/react-progress";
import * as React4 from "react";
import { jsx as jsx12 } from "react/jsx-runtime";
var Progress = React4.forwardRef((_a, ref) => {
  var _b = _a, { className, value } = _b, props = __objRest(_b, ["className", "value"]);
  return /* @__PURE__ */ jsx12(
    ProgressPrimitive.Root,
    __spreadProps(__spreadValues({
      ref,
      className: cn(
        "bg-secondary relative h-4 w-full overflow-hidden rounded-full",
        className
      )
    }, props), {
      children: /* @__PURE__ */ jsx12(
        ProgressPrimitive.Indicator,
        {
          className: "bg-primary h-full w-full flex-1 transition-all",
          style: { transform: `translateX(-${100 - (value || 0)}%)` }
        }
      )
    })
  );
});
Progress.displayName = ProgressPrimitive.Root.displayName;

// src/widgets/chat-agent-events.tsx
import { jsx as jsx13, jsxs as jsxs9 } from "react/jsx-runtime";
var AgentIcons = {
  bot: icons.Bot,
  researcher: icons.ScanSearch,
  writer: icons.PenLine,
  reviewer: icons.MessageCircle,
  publisher: icons.BookCheck
};
function ChatAgentEvents({
  data,
  isFinished
}) {
  const events = useMemo(() => mergeAdjacentEvents(data), [data]);
  return /* @__PURE__ */ jsx13("div", { className: "pl-2", children: /* @__PURE__ */ jsx13("div", { className: "space-y-4 text-sm", children: events.map((eventItem, index) => /* @__PURE__ */ jsx13(
    AgentEventContent,
    {
      event: eventItem,
      isLast: index === events.length - 1,
      isFinished
    },
    index
  )) }) });
}
var MAX_TEXT_LENGTH = 150;
function TextContent({ agent, step }) {
  const { displayText, showMore } = useMemo(
    () => ({
      displayText: step.text.slice(0, MAX_TEXT_LENGTH),
      showMore: step.text.length > MAX_TEXT_LENGTH
    }),
    [step.text]
  );
  return /* @__PURE__ */ jsxs9("div", { className: "whitespace-break-spaces", children: [
    !showMore && /* @__PURE__ */ jsx13("span", { children: step.text }),
    showMore && /* @__PURE__ */ jsxs9("div", { children: [
      /* @__PURE__ */ jsxs9("span", { children: [
        displayText,
        "..."
      ] }),
      /* @__PURE__ */ jsx13(AgentEventDialog, { content: step.text, title: `Agent "${agent}"`, children: /* @__PURE__ */ jsx13("span", { className: "ml-2 cursor-pointer font-semibold underline", children: "Show more" }) })
    ] })
  ] });
}
function ProgressContent({ step }) {
  const progressValue = step.progress.total !== 0 ? Math.round((step.progress.current + 1) / step.progress.total * 100) : 0;
  return /* @__PURE__ */ jsxs9("div", { className: "mt-2 space-y-2", children: [
    step.text && /* @__PURE__ */ jsx13("p", { className: "text-muted-foreground text-sm", children: step.text }),
    /* @__PURE__ */ jsx13(Progress, { value: progressValue, className: "h-2 w-full" }),
    /* @__PURE__ */ jsxs9("p", { className: "text-muted-foreground text-sm", children: [
      "Processing ",
      step.progress.current + 1,
      " of ",
      step.progress.total,
      " steps..."
    ] })
  ] });
}
function AgentEventContent({
  event,
  isLast,
  isFinished
}) {
  const { agent, steps } = event;
  const AgentIcon = event.icon;
  const textSteps = steps.filter((step) => !("progress" in step));
  const progressSteps = steps.filter(
    (step) => "progress" in step
  );
  const lastProgressStep = progressSteps.length > 0 ? progressSteps[progressSteps.length - 1] : void 0;
  return /* @__PURE__ */ jsxs9("div", { className: "fadein-agent flex items-center gap-4 border-b pb-4", children: [
    /* @__PURE__ */ jsxs9("div", { className: "flex w-[100px] flex-col items-center gap-2", children: [
      /* @__PURE__ */ jsxs9("div", { className: "relative", children: [
        isLast && !isFinished && /* @__PURE__ */ jsx13("div", { className: "absolute -right-4 -top-0", children: /* @__PURE__ */ jsxs9("span", { className: "relative flex h-3 w-3", children: [
          /* @__PURE__ */ jsx13("span", { className: "absolute inline-flex h-full w-full animate-ping rounded-full bg-sky-400 opacity-75" }),
          /* @__PURE__ */ jsx13("span", { className: "relative inline-flex h-3 w-3 rounded-full bg-sky-500" })
        ] }) }),
        /* @__PURE__ */ jsx13(AgentIcon, {})
      ] }),
      /* @__PURE__ */ jsx13("span", { className: "font-bold", children: agent })
    ] }),
    textSteps.length > 0 && /* @__PURE__ */ jsxs9("div", { className: "flex-1", children: [
      /* @__PURE__ */ jsx13("ul", { className: "list-decimal space-y-2", children: textSteps.map((step, index) => /* @__PURE__ */ jsx13("li", { children: /* @__PURE__ */ jsx13(TextContent, { agent, step }) }, index)) }),
      lastProgressStep && !isFinished && /* @__PURE__ */ jsx13(ProgressContent, { step: lastProgressStep })
    ] })
  ] });
}
function AgentEventDialog(props) {
  return /* @__PURE__ */ jsxs9(Drawer, { direction: "left", children: [
    /* @__PURE__ */ jsx13(DrawerTrigger, { asChild: true, children: props.children }),
    /* @__PURE__ */ jsxs9(DrawerContent, { className: "mt-24 h-full max-h-[96%] w-3/5 ", children: [
      /* @__PURE__ */ jsxs9(DrawerHeader, { className: "flex justify-between", children: [
        /* @__PURE__ */ jsx13("div", { className: "space-y-2", children: /* @__PURE__ */ jsx13(DrawerTitle, { children: props.title }) }),
        /* @__PURE__ */ jsx13(DrawerClose, { asChild: true, children: /* @__PURE__ */ jsx13(Button, { variant: "outline", children: "Close" }) })
      ] }),
      /* @__PURE__ */ jsx13("div", { className: "m-4 overflow-auto", children: /* @__PURE__ */ jsx13(Markdown, { content: props.content }) })
    ] })
  ] });
}
function mergeAdjacentEvents(events) {
  var _a;
  const mergedEvents = [];
  for (const event of events) {
    const lastMergedEvent = mergedEvents[mergedEvents.length - 1];
    const eventStep = event.data ? {
      text: event.text,
      progress: event.data
    } : {
      text: event.text
    };
    if (lastMergedEvent && lastMergedEvent.agent === event.agent) {
      lastMergedEvent.steps.push(eventStep);
    } else {
      mergedEvents.push({
        agent: event.agent,
        steps: [eventStep],
        icon: (_a = AgentIcons[event.agent.toLowerCase()]) != null ? _a : icons.Bot
      });
    }
  }
  return mergedEvents;
}

// src/widgets/chat-events.tsx
import { ChevronDown, ChevronRight, Loader2 } from "lucide-react";
import { useState as useState2 } from "react";

// src/ui/collapsible.tsx
import * as CollapsiblePrimitive from "@radix-ui/react-collapsible";
var Collapsible = CollapsiblePrimitive.Root;
var CollapsibleTrigger2 = CollapsiblePrimitive.CollapsibleTrigger;
var CollapsibleContent2 = CollapsiblePrimitive.CollapsibleContent;

// src/widgets/chat-events.tsx
import { jsx as jsx14, jsxs as jsxs10 } from "react/jsx-runtime";
function ChatEvents({
  data,
  showLoading
}) {
  const [isOpen, setIsOpen] = useState2(false);
  const buttonLabel = isOpen ? "Hide events" : "Show events";
  const EventIcon = isOpen ? /* @__PURE__ */ jsx14(ChevronDown, { className: "h-4 w-4" }) : /* @__PURE__ */ jsx14(ChevronRight, { className: "h-4 w-4" });
  return /* @__PURE__ */ jsx14("div", { className: "border-l-2 border-indigo-400 pl-2", children: /* @__PURE__ */ jsxs10(Collapsible, { open: isOpen, onOpenChange: setIsOpen, children: [
    /* @__PURE__ */ jsx14(CollapsibleTrigger2, { asChild: true, children: /* @__PURE__ */ jsxs10(Button, { variant: "secondary", className: "space-x-2", children: [
      showLoading ? /* @__PURE__ */ jsx14(Loader2, { className: "h-4 w-4 animate-spin" }) : null,
      /* @__PURE__ */ jsx14("span", { children: buttonLabel }),
      EventIcon
    ] }) }),
    /* @__PURE__ */ jsx14(CollapsibleContent2, { asChild: true, children: /* @__PURE__ */ jsx14("div", { className: "mt-4 space-y-2 text-sm", children: data.map((eventItem, index) => /* @__PURE__ */ jsx14("div", { className: "whitespace-break-spaces", children: eventItem.title }, index)) }) })
  ] }) });
}

// src/widgets/chat-files.tsx
import { jsx as jsx15 } from "react/jsx-runtime";
function ChatFiles({ data }) {
  if (!data.files.length) return null;
  return /* @__PURE__ */ jsx15("div", { className: "flex items-center gap-2", children: data.files.map((file) => /* @__PURE__ */ jsx15(
    DocumentInfo,
    {
      document: { url: file.url, sources: [] },
      className: "mb-2 mt-2"
    },
    file.id
  )) });
}

// src/widgets/chat-image.tsx
import { jsx as jsx16 } from "react/jsx-runtime";
function ChatImage({ data }) {
  return /* @__PURE__ */ jsx16("div", { className: "max-w-[200px] rounded-md shadow-md", children: /* @__PURE__ */ jsx16("img", { src: data.url, alt: "chat_image", className: "h-auto w-full" }) });
}

// src/widgets/chat-sources.tsx
import { useMemo as useMemo2 } from "react";
import { jsx as jsx17, jsxs as jsxs11 } from "react/jsx-runtime";
function ChatSources({ data }) {
  const documents = useMemo2(() => {
    const nodesByUrl = {};
    data.nodes.forEach((node) => {
      var _a;
      const key = node.url;
      (_a = nodesByUrl[key]) != null ? _a : nodesByUrl[key] = [];
      nodesByUrl[key].push(node);
    });
    return Object.entries(nodesByUrl).map(([url, sources]) => ({
      url,
      sources
    }));
  }, [data.nodes]);
  if (documents.length === 0) return null;
  return /* @__PURE__ */ jsxs11("div", { className: "space-y-2 text-sm", children: [
    /* @__PURE__ */ jsx17("div", { className: "text-lg font-semibold", children: "Sources:" }),
    /* @__PURE__ */ jsx17("div", { className: "flex flex-wrap gap-3", children: documents.map((document2, index) => {
      const startIndex = documents.slice(0, index).reduce((acc, doc) => acc + doc.sources.length, 0);
      return /* @__PURE__ */ jsx17(
        DocumentInfo,
        {
          document: document2,
          startIndex
        },
        document2.url
      );
    }) })
  ] });
}

// src/widgets/suggested-questions.tsx
import { jsx as jsx18, jsxs as jsxs12 } from "react/jsx-runtime";
function SuggestedQuestions({
  questions,
  append
}) {
  const showQuestions = questions.length > 0;
  return showQuestions && /* @__PURE__ */ jsx18("div", { className: "flex flex-col space-y-2", children: questions.map((question, index) => /* @__PURE__ */ jsxs12(
    "a",
    {
      onClick: () => {
        append({ role: "user", content: question });
      },
      className: "cursor-pointer text-sm italic hover:underline",
      children: [
        "->",
        " ",
        question
      ]
    },
    index
  )) });
}

// src/widgets/starter-questions.tsx
import { jsx as jsx19 } from "react/jsx-runtime";
function StarterQuestions(props) {
  return /* @__PURE__ */ jsx19("div", { className: "absolute bottom-6 left-0 w-full", children: /* @__PURE__ */ jsx19("div", { className: "mx-20 grid grid-cols-2 gap-2", children: props.questions.map((question, i) => /* @__PURE__ */ jsx19(
    Button,
    {
      variant: "outline",
      onClick: () => props.append({ role: "user", content: question }),
      children: question
    },
    i
  )) }) });
}

// src/widgets/image-preview.tsx
import { XCircleIcon as XCircleIcon2 } from "lucide-react";
import { jsx as jsx20, jsxs as jsxs13 } from "react/jsx-runtime";
function ImagePreview({
  url,
  onRemove
}) {
  return /* @__PURE__ */ jsxs13("div", { className: "group relative h-20 w-20", children: [
    /* @__PURE__ */ jsx20(
      "img",
      {
        src: url,
        alt: "uploaded_image",
        className: "h-full w-full rounded-xl object-cover hover:brightness-75"
      }
    ),
    /* @__PURE__ */ jsx20(
      "div",
      {
        className: cn(
          "absolute -right-2 -top-2 z-10 hidden h-6 w-6 rounded-full bg-gray-500 text-white group-hover:block"
        ),
        children: /* @__PURE__ */ jsx20(
          XCircleIcon2,
          {
            className: "h-6 w-6 rounded-full bg-gray-500 text-white",
            onClick: onRemove
          }
        )
      }
    )
  ] });
}

// src/widgets/file-uploader.tsx
import { Loader2 as Loader22, Paperclip } from "lucide-react";
import { useState as useState3 } from "react";
import { jsx as jsx21, jsxs as jsxs14 } from "react/jsx-runtime";
var DEFAULT_INPUT_ID = "fileInput";
var DEFAULT_FILE_SIZE_LIMIT = 1024 * 1024 * 50;
function FileUploader({
  config,
  onFileUpload,
  onFileError
}) {
  var _a;
  const [uploading, setUploading] = useState3(false);
  const [remainingFiles, setRemainingFiles] = useState3(0);
  const inputId = (config == null ? void 0 : config.inputId) || DEFAULT_INPUT_ID;
  const fileSizeLimit = (config == null ? void 0 : config.fileSizeLimit) || DEFAULT_FILE_SIZE_LIMIT;
  const allowedExtensions = config == null ? void 0 : config.allowedExtensions;
  const defaultCheckExtension = (extension) => {
    if (allowedExtensions && !allowedExtensions.includes(extension)) {
      return `Invalid file type. Please select a file with one of these formats: ${allowedExtensions.join(
        ","
      )}`;
    }
    return null;
  };
  const checkExtension = (_a = config == null ? void 0 : config.checkExtension) != null ? _a : defaultCheckExtension;
  const isFileSizeExceeded = (file) => {
    return file.size > fileSizeLimit;
  };
  const resetInput = () => {
    const fileInput = document.getElementById(inputId);
    fileInput.value = "";
  };
  const onFileChange = (e) => __async(this, null, function* () {
    const files = Array.from(e.target.files || []);
    if (!files.length) return;
    setUploading(true);
    yield handleUpload(files);
    resetInput();
    setUploading(false);
  });
  const handleUpload = (files) => __async(this, null, function* () {
    const onFileUploadError = onFileError || window.alert;
    if (files.length > 1 && files.some((file) => file.type.startsWith("image/"))) {
      onFileUploadError("Multiple files with image are not supported");
      return;
    }
    for (const file of files) {
      const fileExtension = file.name.split(".").pop() || "";
      const extensionFileError = checkExtension(fileExtension);
      if (extensionFileError) {
        onFileUploadError(extensionFileError);
        return;
      }
      if (isFileSizeExceeded(file)) {
        onFileUploadError(
          `File size exceeded. Limit is ${fileSizeLimit / 1024 / 1024} MB`
        );
        return;
      }
    }
    setRemainingFiles(files.length);
    for (const file of files) {
      yield onFileUpload(file);
      setRemainingFiles((prev) => prev - 1);
    }
    setRemainingFiles(0);
  });
  return /* @__PURE__ */ jsxs14("div", { className: "self-stretch", children: [
    /* @__PURE__ */ jsx21(
      "input",
      {
        type: "file",
        id: inputId,
        style: { display: "none" },
        onChange: onFileChange,
        accept: allowedExtensions == null ? void 0 : allowedExtensions.join(","),
        disabled: (config == null ? void 0 : config.disabled) || uploading,
        multiple: config == null ? void 0 : config.multiple
      }
    ),
    /* @__PURE__ */ jsx21(
      "label",
      {
        htmlFor: inputId,
        className: cn(
          buttonVariants({ variant: "secondary", size: "icon" }),
          "relative cursor-pointer",
          uploading && "opacity-50"
        ),
        children: uploading ? /* @__PURE__ */ jsxs14("div", { className: "relative flex h-full w-full items-center justify-center", children: [
          /* @__PURE__ */ jsx21(Loader22, { className: "absolute h-6 w-6 animate-spin" }),
          remainingFiles > 0 && /* @__PURE__ */ jsx21("span", { className: "absolute inset-0 flex items-center justify-center text-xs", children: remainingFiles })
        ] }) : /* @__PURE__ */ jsx21(Paperclip, { className: "h-4 w-4 -rotate-45" })
      }
    )
  ] });
}
export {
  ChatAgentEvents,
  ChatEvents,
  ChatFiles,
  ChatImage,
  ChatSources,
  CodeBlock,
  DocumentInfo,
  FileUploader,
  ImagePreview,
  Markdown,
  PdfDialog,
  StarterQuestions,
  SuggestedQuestions
};
//# sourceMappingURL=index.js.map